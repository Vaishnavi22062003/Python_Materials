What is Inorder Traversal?

In inorder traversal, we visit nodes in the order:

Left Subtree

Root

Right Subtree

Often remembered as: "Left → Root → Right"

        1
       / \
      2   3
     / \  /
    4  5 6


norder Traversal Steps:

Start at root 1 → go left to 2

Go further left to 4 → visit 4

Back to 2 → visit 2

Go right to 5 → visit 5

Back to root → visit 1

Go right to 3

Go left to 6 → visit 6

Back to 3 → visit 3

Inorder Traversal = [4, 2, 5, 1, 6, 3]


class Node:
    def __init__(self, key):
        self.key = key
        self.left = None
        self.right = None

def inorder(root):
    if root:
        inorder(root.left)         # 1. Traverse left
        print(root.key, end=" ")   # 2. Visit root
        inorder(root.right)        # 3. Traverse right

# Example Tree
root = Node(1)
root.left = Node(2)
root.right = Node(3)
root.left.left = Node(4)
root.left.right = Node(5)
root.right.left = Node(6)

print("Inorder Traversal:")
inorder(root)

================================================================